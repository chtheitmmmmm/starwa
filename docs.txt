游戏名 星际大战
标签：角色扮演，弹幕，打怪
主要玩法：玩家通过操作战斗机位置击落敌机和躲避敌机子弹，并最终通关

素材来源：（音频和图片均）主要为《雷霆战机》，以及一些淘宝商家出售的野素材

上线版本：（预计）1.0
更新日志：
版本0.1:
    玩家通过点击屏幕正中间的按钮来开始游戏
    玩家可以通过"WASD"四个键操作自己的战斗机的位置，通过手动关闭窗口结束游戏
    战斗机的位置局限在窗口中
    游戏背景为可无限循环滚动式
版本0.2:
    新增：
        战斗机向左或向右运动将产生加速度滑动效果，松开键盘将使战斗机减速
        战斗机将根据向左或向右运动变化自身姿态，并在松开键盘使自然地恢复
        （在写战机转换姿态代码时出现了代码冗长的现象，就将player的bound属性写成一个新的Boundlrtb类对象，
        将speed的限制写成新的BoundUnit类对象，将战机形态的变化写成新的BoundLine类对象）
        战斗机拥有生命值属性，并写了Hp和HpSprite类来完成对生命值操作的封装
        战斗机生命值条将固定显示在屏幕左下角，并实时显示战机剩余生命条
        战斗机拥有红色炮弹武器，并能以恒定的的合理的速率和频率从战机正中部发射出去
        血条目前版本只能处于满载状态，游戏将仍没有完整的结束界面
    更改：
        整体实现架构被重写两次:
        第一次：
            新增了Frame类和FrmeNum类，估计平均降低空间复杂度5～10倍，软件可面向更广用户！
        第二次：
            Player类被重写，其中包含PlayerPlane, HpFrameBar等新的类对象，预计将高度封装这个类
            PlayerPlane包含新的ControlCenter类对象，并包含原Player类的Frame类对象作为外观
        （感想：当项目的整个凌乱不堪的架构被新架构重写实现的时候，那种成就感是无可比拟的，而且感觉强迫症也得到了满足！）
        小改动：
        加速度从二元函数列表改成二元整数列表
版本0.3:
    新增：
        敌机能够被击毁
        敌机能够发射炮弹
        敌机能随机出现和移动
        玩家飞机能被击毁
        开始按钮按下和被覆盖会发出声音
        新增三个音频管理器类Plane_Audio, Button_Audio, Bullet_Audio用来管理类的音频
    减少：
        除去了一些类不必要的属性和方法，除去了一些不必要的import，提高了性能
        将一些被深度搜索的属性在方法中预先定义成变量，提高性能
    更改：
        为提高性能，将子弹的碰撞判断改为圆判断。
        为避免一人变千人变的bug， MySprite的所有子类都被加上了一个copy方法
        改写Player, PlayerPlane, Enemy
        媒体文件组织逻辑更改，与类的传参逻辑保持一致。所有实物类均有audio和frame保存媒体数据
        架构被重写：
            使PlayerPlane和Soldier都继承自Plane类，更方便管理
            PlayerPlane和Soldier用截然不同的controlcenter和engine
版本0.4（未实现）：
    于2022.2.12下午8:18放弃更新
    新增：
        游戏进度保存：
            在读取数据的时候将数据加载到对应的存档框中，并通过滚轮翻看所有存档，总共允许8个存档
        虚拟道具：
            飞机外形
            金币（可用于购买飞机道具）
        游戏分数总结
        第一个游戏关卡（属于有限闯关模式，没有随机生成算法）
        游戏关卡选择
        游戏资源购买（目前为飞机外形，没有为这些飞机单独设置engine或武器）

    减少：

    更改：

    构思出了一点剧情：公元50世纪，人类被侵略者打败，部分遗民乘坐人类的最后一艘太空母舰'希望号'在太空中漂泊寻找合适的居所，期间不断有太空海盗如厄瑞卡
        船队、来布里奇暗影猎手舰团等的侵犯骚扰，作为希望号舰长的你，能否为人类探寻出最终的家园？

版本0.4（网络版本）：
    2022.9.24
    新增：
        可支持最多5人联机游戏。
        由服务器实现同步，客户端实现计算。

